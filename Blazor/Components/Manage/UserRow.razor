@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

<style>
.actions {
    display: flex;
    gap: 7px;
}
</style>

<tr>
    <td>@CurrentUser.Email</td>
    <td>
        <div class="actions">
            <button @onclick="() => MakeAdmin(CurrentUser)">make admin</button>
            <button @onclick="() => RemoveAdmin(CurrentUser)">remove admin</button>
            <button @onclick="() => Delete(CurrentUser)">delete</button>
        </div>
    </td>
</tr>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <tr>
        <td colspan="2" style="color:red">@ErrorMessage</td>
    </tr>
}

@code {
    [Parameter]
    public User CurrentUser { get; set; }

    [Parameter]
    public EventCallback<User> OnUserDeleted { get; set; }

    private string ErrorMessage { get; set; }

    private async Task Delete(User user)
    {
        var currentUser = await UserManager.GetUserAsync(SignInManager.Context.User);

        if (currentUser.Id == user.Id)
        {
            ErrorMessage = "You cannot delete your own account.";
            StateHasChanged();
            await Task.Delay(1000);
            ErrorMessage = string.Empty;
            StateHasChanged();
            return;
        }

        await UserManager.DeleteAsync(user);
        await OnUserDeleted.InvokeAsync(user);
    }

    private async Task MakeAdmin(User user)
    {
        await UserManager.AddToRoleAsync(user, "Admin");
    }

    private async Task RemoveAdmin(User user)
    {
        var currentUser = await UserManager.GetUserAsync(SignInManager.Context.User);

        if (currentUser.Id == user.Id)
        {
            ErrorMessage = "You cannot remove your own admin role.";
            StateHasChanged();
            await Task.Delay(1000);
            ErrorMessage = string.Empty;
            StateHasChanged();
            return;
        }

        await UserManager.RemoveFromRoleAsync(user, "Admin");
    }
}
